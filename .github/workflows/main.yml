name: Haskell CI

on:
  push:
    branches:
      - main
      - 0-dev

jobs:
  test_on_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Haskell modules
        id: cache-haskell
        uses: actions/cache@v3
        env:
          cache-name: Cache Haskell Modules
        with:
          path: ~/.haskell
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup Haskell
        uses: haskell-actions/setup@v2
        with:
          ghc-version: '8.8.4'
          enable-stack: true
          stack-version: 'latest'

      - name: Install project dependencies
        run: sudo apt-get update
          sudo apt-get install -y libgmp-dev
          stack init
          stack setup
          stack install

      - name: Run "make test" for Haskell
        working-directory: ${{ github.workspace }}
        run: make test

      - name: Package artifacts
        run: mkdir -p packaged
          find artifacts -type f -exec cp {} packaged \;
          tar czf packaged.tar.gz -C packaged .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.ref }}
          release_name: Release v${{ github.ref }}
          body: Release v${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets to the Release
        id: upload_assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: packaged.tar.gz
          asset_name: my_asset_name.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
