name: Haskell CI

on:
  push:
    branches:
      - main
      - 0-dev
env:
  MIRROR_URL: "git@github.com:knightartefact/test.git"

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache haskell
        uses: actions/cache@v3.3.2
        with:
          path: |
            ~/.ghc
          key: ${{ runner.os }}-ghc-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-ghc-    

      - name: Cache Stack build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.stack
          key: ${{ runner.os }}-stack-${{ hashFiles('stack.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack-

      - name: Setup Haskell
        uses: haskell-actions/setup@v2.6.0
        with:
          ghc-version: '9.4.8'
          enable-stack: true
          stack-version: 'latest'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgmp-dev

      - name: Build binary
        run: make

      - name: Run tests
        run: make test

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: glados-binary
          path: ./glados



  release:
    name: Release project
    runs-on: ubuntu-20.04
    needs: [build-and-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: glados-binary

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./glados
          asset_name: glados-${{ runner.os }}
          asset_content_type: application/zip

  push:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url: ${{ env.MIRROR_URL }}
        ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
